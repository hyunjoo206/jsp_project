package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.MemberVO;
import service.MemberService;
import service.MemberServiceImpl;

@WebServlet("/mem/*")

public class MemberController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	private static final Logger log = LoggerFactory.getLogger(MemberController.class);
	private RequestDispatcher rdp;
	private MemberService msv;
	private int isOk;
	private String destPage;
	
    public MemberController() {
    	msv = new MemberServiceImpl();
    }

    protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=utf-8");
		
		String uri = request.getRequestURI();
		log.info(">>> uri : "+uri);
		// /mem/join : 요청에 대한 path만 남기기
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(">>> path : "+path);
		
		switch(path) {
		
		case "join":
			destPage="/member/join.jsp";
			break;
			
		case "register":
			//jsp 에서 가져온 파라미터 저장
			String id = request.getParameter("id");
			String password = request.getParameter("password");
			String email = request.getParameter("email");
			int age = Integer.parseInt(request.getParameter("age"));
			
			// 파라미터로 mvo 객체 생성
			MemberVO mvo = new MemberVO(id, password, email, age);
			
			isOk = msv.register(mvo);
			log.info(">>> JOIN > "+ (isOk>0 ? "success" :"fail"));
			destPage = "/";
			break;
		
		case "login" :
			destPage="/member/login.jsp";
			break;
			
		case "login_auth" :
			try {
				//login.jsp에서 사용자가 입력한 값을 request로 받아오는 것
				String id2 = request.getParameter("id");
				String password2 = request.getParameter("password");
				//mvo2에는 사용자가 입력한 id,pw가 들어있음
				MemberVO mvo2 = new MemberVO(id2, password2);
				//mvo2 객체를 DB에 전달(login)해서 가져온 값을 loginMvo에 담음
				MemberVO loginMvo = msv.login(mvo2);
				
				if(loginMvo != null) { //DB에 일치하는 정보가 있어서 값이 loginMvo에 담기면 로그인됨
					//session은 어디서든 쓸 수 있음
					HttpSession ses = request.getSession();
					ses.setAttribute("ses", loginMvo);
				}else {
					request.setAttribute("msg_login", 0);
				}
				destPage="/"; //로그인 다 되면 다시 index페이지로 => jsp에서 c:if로 로그인 된 상태 보이게 
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		
		}//switch 끝
		
		
		
		
		rdp = request.getRequestDispatcher(destPage);
		rdp.forward(request, response);
    }
    
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
